---
import Shell from "@components/Shell/index.astro";
import Image from "@components/Image/index.astro";
import PostsList from "@components/PostsList/index.astro";
import PostListItem from "@components/PostsList/Item.astro";
import postTopics from "@content/_post-topics.json";
import pagePaths from "@constants/pagePaths";

import introImg from "./assets/intro-mobile-new.webp";
import i18n, { pathMap } from "./i18n";
import { getPostsByLang } from "@cms/collections/posts/helpers";
import PageTitle from "@components/PageTitle.astro";

const currentLang = Astro.currentLocale as Lang;
const pageData = i18n[currentLang];
const usedPagePaths = pagePaths[currentLang];
const { posts: postsPath } = usedPagePaths;

const allPosts = await getPostsByLang(currentLang);
const latestUpdates = allPosts.slice(0, 5);

const formattedTopics = postTopics["topics-list"]
  .map((topic) => {
    return {
      label: postTopics["topics-list"].find(({ slug }) => slug === topic.slug)?.[pageData.topicLabelProperty],
      path: `${postsPath}/topic/${topic.slug}`,
    };
  })
  .sort((a, b) => a.label.localeCompare(b.label));

const topicsColumnsNumber = 3;
const topicsPerColumn = Math.ceil(formattedTopics.length / topicsColumnsNumber);

const topicsColumns = Array.from({ length: topicsColumnsNumber }, (_, i) => {
  return formattedTopics.slice(i * topicsPerColumn, (i + 1) * topicsPerColumn);
});

const randomStaff = [{ title: pageData.randomStaff.emoticons.title, path: pageData.randomStaff.emoticons.path }];
---

<Shell i18nPagePaths={pathMap}>
  <div class="main-page" data-fragment="main-page">
    <section class="presentation">
      <PageTitle>{pageData.mainTitle}</PageTitle>
      <div class="presentation-panels">
        <div>
          {pageData.introParagraphs.map((paragraph) => <p set:html={paragraph} />)}
        </div>
        <div class="main-image-holder">
          <Image src={introImg} class="main-image main-image--desk" alt={pageData.mainImgAlt} loading="eager" />
        </div>
      </div>
    </section>
    <section class="section latest-posts">
      <h2 class="section-title">{pageData.latestPostsTitle}</h2>
      <PostsList>
        {latestUpdates.map((post) => <PostListItem post={post} />)}
      </PostsList>
      <a href={postsPath} class="more-posts-link">...{pageData.morePosts}</a>
    </section>
    <section class="section post-topics">
      <h2 class="section-title">{pageData.categoriesTitle}</h2>
      <div class="topics-columns">
        {
          topicsColumns.map((column, index) => (
            <ul class="topics-column">
              {column.map((topic) => (
                <li class="topic-item">
                  <a class="post-topic-link" href={topic.path}>
                    {topic.label}
                  </a>
                </li>
              ))}
            </ul>
          ))
        }
      </div>
    </section>
    <section class="section random-staff">
      <h2 class="section-title">{pageData.randomStaffTitle}</h2>
      <ul class="random-staff-list">
        {
          randomStaff.map((staff) => (
            <li class="random-staff-item">
              <a class="random-staff-link" href={staff.path}>
                {staff.title}
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </div>
</Shell>

<style lang="scss">
  @import "./styles.scss";
</style>
