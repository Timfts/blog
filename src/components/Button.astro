---
export interface Props extends astroHTML.JSX.ButtonHTMLAttributes {}

const { type = "button", ...props } = Astro.props;
---

<button {...props} type={type}><slot /></button>
<style lang="scss">
  button {
    min-width: 75px;
    min-height: 23px;
    color: var(--theme-text-color);
    cursor: var(--default-cursor);
    padding: 0 12px;
    font-family: var(--sans-serif);
    -webkit-font-smoothing: antialiased;
    font-size: var(--txt-xsmall);
    box-sizing: border-box;
    border: 1px solid var(--theme-border-1);
    background: var(--theme-tab-bg, 
      linear-gradient(
        180deg,
        rgba(255, 255, 255, 1) 0%,
        rgba(236, 235, 229, 1) 86%,
        rgba(216, 208, 196, 1) 100%
      )
    );
    box-shadow: none;
    border-radius: 3px;

    &:not(:disabled) {
      &:active,
      &.active {
        box-shadow: none;
        background: var(--theme-selector-bg, 
          linear-gradient(
            180deg,
            rgba(205, 202, 195, 1) 0%,
            rgba(227, 227, 219, 1) 8%,
            rgba(229, 229, 222, 1) 94%,
            rgba(242, 242, 241, 1) 100%
          )
        );
      }

      &:hover {
        box-shadow: var(--theme-highlight-shadow, 
          inset -1px 1px #fff0cf,
          inset 1px 2px #fdd889,
          inset -2px 2px #fbc761,
          inset 2px -2px #e5a01a);
      }
    }
    &:focus,
    &.focused {
      outline: 1px dotted var(--theme-text-color, #000000);
      outline-offset: -4px;
      box-shadow: var(--theme-focus-shadow, 
        inset -1px 1px #cee7ff,
        inset 1px 2px #98b8ea,
        inset -2px 2px #bcd4f6,
        inset 1px -1px #89ade4,
        inset 2px -2px #89ade4);
    }
    &::-moz-focus-inner {
      border: 0;
    }
  }
</style>
