---
import Button from "@components/Button.astro";
import LocalImage from "@components/Image/index.astro";
import CategoriesFilter from "@components/CategoriesFilter/index.astro";
import postTopics from "@content/_post-topics.json";
import notFoundImg from "./assets/not-found.webp";
import i18n from "./i18n";

type Props = {
  showTopics?: boolean;
};

const lang = Astro.currentLocale as Lang;
const { searchPlaceholder, searchAriaLabel, showFiltersLabel, legendFiltersLabel, hideFiltersLabel } = i18n[lang];

const { showTopics = false } = Astro.props;

const topicsList = postTopics?.["topics-list"] || [];
const topicsSlugs = topicsList.map(({ slug }) => slug).join(",");
const fmtTopics = topicsList.map(({ slug, label, "label-ptbr": labelPtbr }) => {
  return {
    slug,
    label: lang === "pt-br" ? labelPtbr : label,
  };
});
---

<div class="search" data-fragment="search-posts" data-show-topics={showTopics && "true"} data-topics={topicsSlugs}>
  <div class="search-line">
    <h1 class="search-semantic-title">posts</h1>
    <div class="search-logo"></div>
    <input class="search-input" type="text" aria-label={searchAriaLabel} />
    <Button class="search-button">{searchPlaceholder}</Button>
  </div>
  <slot name="topics-slot">
    {
      showTopics && (
        <div class="search-topics">
          <CategoriesFilter
            items={fmtTopics}
            name="search-topics"
            id="search-topics"
            searchQuery="topics"
            showLabel={showFiltersLabel}
            hideLabel={hideFiltersLabel}
            legend={legendFiltersLabel}
          />
        </div>
      )
    }
  </slot>

  <slot />
  <template id="not-found-template">
    <LocalImage class="not-found-img" id="not-found-image" src={notFoundImg} alt="not found" />
  </template>
</div>
<script>
  import "./controller";
</script>
<style lang="scss">
  .search {
    &-line {
      display: flex;
      align-items: center;
      gap: 10px;
      flex-direction: row;

      @include belowTurningPoint() {
        flex-direction: column;
      }
    }

    &-semantic-title {
      position: absolute;
      opacity: 0;
    }

    &-logo {
      width: 130px;
      height: 68px;
      background-image: var(--theme-search-logo);
      background-size: cover;
      margin-right: 20px;

      @include belowTurningPoint() {
        margin-right: 0;
      }
    }

    &-input {
      width: 100%;
      max-width: 300px;
      padding: 0 15px;
      font-size: var(--search-field-font);
    }

    &-topics {
      padding: 30px 0;
    }
  }

  .not-found-img {
    max-width: 300px;
  }
</style>
